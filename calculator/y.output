State 10 conflicts: 4 shift/reduce
State 11 conflicts: 4 shift/reduce
State 12 conflicts: 4 shift/reduce
State 13 conflicts: 4 shift/reduce


Grammar

    0 $accept: S $end

    1 S: S E '\n'
    2  | %empty

    3 E: E '+' E
    4  | E '-' E
    5  | E '*' E
    6  | E '/' E
    7  | T_Int


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'*' (42) 5
'+' (43) 3
'-' (45) 4
'/' (47) 6
error (256)
T_Int (258) 7


Nonterminals, with rules where they appear

$accept (9)
    on left: 0
S (10)
    on left: 1 2, on right: 0 1
E (11)
    on left: 3 4 5 6 7, on right: 1 3 4 5 6


State 0

    0 $accept: . S $end

    $default  reduce using rule 2 (S)

    S  go to state 1


State 1

    0 $accept: S . $end
    1 S: S . E '\n'

    $end   shift, and go to state 2
    T_Int  shift, and go to state 3

    E  go to state 4


State 2

    0 $accept: S $end .

    $default  accept


State 3

    7 E: T_Int .

    $default  reduce using rule 7 (E)


State 4

    1 S: S E . '\n'
    3 E: E . '+' E
    4  | E . '-' E
    5  | E . '*' E
    6  | E . '/' E

    '\n'  shift, and go to state 5
    '+'   shift, and go to state 6
    '-'   shift, and go to state 7
    '*'   shift, and go to state 8
    '/'   shift, and go to state 9


State 5

    1 S: S E '\n' .

    $default  reduce using rule 1 (S)


State 6

    3 E: E '+' . E

    T_Int  shift, and go to state 3

    E  go to state 10


State 7

    4 E: E '-' . E

    T_Int  shift, and go to state 3

    E  go to state 11


State 8

    5 E: E '*' . E

    T_Int  shift, and go to state 3

    E  go to state 12


State 9

    6 E: E '/' . E

    T_Int  shift, and go to state 3

    E  go to state 13


State 10

    3 E: E . '+' E
    3  | E '+' E .
    4  | E . '-' E
    5  | E . '*' E
    6  | E . '/' E

    '+'  shift, and go to state 6
    '-'  shift, and go to state 7
    '*'  shift, and go to state 8
    '/'  shift, and go to state 9

    '+'       [reduce using rule 3 (E)]
    '-'       [reduce using rule 3 (E)]
    '*'       [reduce using rule 3 (E)]
    '/'       [reduce using rule 3 (E)]
    $default  reduce using rule 3 (E)


State 11

    3 E: E . '+' E
    4  | E . '-' E
    4  | E '-' E .
    5  | E . '*' E
    6  | E . '/' E

    '+'  shift, and go to state 6
    '-'  shift, and go to state 7
    '*'  shift, and go to state 8
    '/'  shift, and go to state 9

    '+'       [reduce using rule 4 (E)]
    '-'       [reduce using rule 4 (E)]
    '*'       [reduce using rule 4 (E)]
    '/'       [reduce using rule 4 (E)]
    $default  reduce using rule 4 (E)


State 12

    3 E: E . '+' E
    4  | E . '-' E
    5  | E . '*' E
    5  | E '*' E .
    6  | E . '/' E

    '+'  shift, and go to state 6
    '-'  shift, and go to state 7
    '*'  shift, and go to state 8
    '/'  shift, and go to state 9

    '+'       [reduce using rule 5 (E)]
    '-'       [reduce using rule 5 (E)]
    '*'       [reduce using rule 5 (E)]
    '/'       [reduce using rule 5 (E)]
    $default  reduce using rule 5 (E)


State 13

    3 E: E . '+' E
    4  | E . '-' E
    5  | E . '*' E
    6  | E . '/' E
    6  | E '/' E .

    '+'  shift, and go to state 6
    '-'  shift, and go to state 7
    '*'  shift, and go to state 8
    '/'  shift, and go to state 9

    '+'       [reduce using rule 6 (E)]
    '-'       [reduce using rule 6 (E)]
    '*'       [reduce using rule 6 (E)]
    '/'       [reduce using rule 6 (E)]
    $default  reduce using rule 6 (E)
